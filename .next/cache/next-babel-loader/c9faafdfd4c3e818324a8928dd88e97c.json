{"ast":null,"code":"var _jsxFileName = \"/Users/didier/Projects/digest/src/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { NextSeo } from 'next-seo';\nimport { motion, AnimatePresence } from 'framer-motion'; // Styles\n\nimport '../styles/main.scss';\nconst name = 'Ten Sharp';\nconst description = `The band behind 'You'`;\nconst title = `Ten Sharp — The Band behind 'You'.`; // <Component/> returns the component it self\n// pageProps returns the props you use to in that component. It can be any data\n// router.route returns the route your component lives on. So in our case it will be '/' or '/products/[id]'\n// exitBeforeEnter: AnimatePresence will only render one component at a time. The exiting component will finished its exit animation before the entering component is rendered\n\nconst App = ({\n  Component,\n  pageProps,\n  router\n}) => __jsx(React.Fragment, null, __jsx(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, __jsx(\"link\", {\n  href: \"https://fonts.googleapis.com/css?family=Inter:400,500,600,700&display=swap\",\n  rel: \"stylesheet\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"shortcut icon\",\n  href: \"/img/favicon/favicon-32.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"icon\",\n  type: \"image/png\",\n  sizes: \"128x128\",\n  href: \"/img/favicon/favicon-128.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"icon\",\n  type: \"image/png\",\n  sizes: \"152x152\",\n  href: \"/img/favicon/favicon-152.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"icon\",\n  type: \"image/png\",\n  sizes: \"167x167\",\n  href: \"/img/favicon/favicon-167.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"icon\",\n  type: \"image/png\",\n  sizes: \"180x180\",\n  href: \"/img/favicon/favicon-180.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"icon\",\n  type: \"image/png\",\n  sizes: \"192x192\",\n  href: \"/img/favicon/favicon-192.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), __jsx(\"link\", {\n  rel: \"icon\",\n  type: \"image/png\",\n  sizes: \"196x196\",\n  href: \"/img/favicon/favicon-196.png\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"viewport\",\n  content: \"width=device-width, initial-scale=1.0\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})), __jsx(NextSeo, {\n  title: title,\n  description: description,\n  openGraph: {\n    url: 'https://tensharp.com',\n    title: name,\n    description,\n    site_name: name\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), __jsx(AnimatePresence, {\n  exitBeforeEnter: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, __jsx(Component, _extends({}, pageProps, {\n  key: router.route,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}))));\n\nexport default App;","map":{"version":3,"sources":["/Users/didier/Projects/digest/src/pages/_app.js"],"names":["React","Head","NextSeo","motion","AnimatePresence","name","description","title","App","Component","pageProps","router","url","site_name","route"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC,C,CAEA;;AACA,OAAO,qBAAP;AAEA,MAAMC,IAAI,GAAG,WAAb;AACA,MAAMC,WAAW,GAAI,uBAArB;AACA,MAAMC,KAAK,GAAI,oCAAf,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KACV,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,IAAI,EAAC,4EAAX;AAAwF,EAAA,GAAG,EAAC,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAM,EAAA,GAAG,EAAC,eAAV;AAA0B,EAAA,IAAI,EAAC,6BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE;AAAM,EAAA,GAAG,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,WAAtB;AAAkC,EAAA,KAAK,EAAC,SAAxC;AAAkD,EAAA,IAAI,EAAC,8BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE;AAAM,EAAA,GAAG,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,WAAtB;AAAkC,EAAA,KAAK,EAAC,SAAxC;AAAkD,EAAA,IAAI,EAAC,8BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKE;AAAM,EAAA,GAAG,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,WAAtB;AAAkC,EAAA,KAAK,EAAC,SAAxC;AAAkD,EAAA,IAAI,EAAC,8BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME;AAAM,EAAA,GAAG,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,WAAtB;AAAkC,EAAA,KAAK,EAAC,SAAxC;AAAkD,EAAA,IAAI,EAAC,8BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAOE;AAAM,EAAA,GAAG,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,WAAtB;AAAkC,EAAA,KAAK,EAAC,SAAxC;AAAkD,EAAA,IAAI,EAAC,8BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,EAQE;AAAM,EAAA,GAAG,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,WAAtB;AAAkC,EAAA,KAAK,EAAC,SAAxC;AAAkD,EAAA,IAAI,EAAC,8BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,EASE;AAAM,EAAA,IAAI,EAAC,UAAX;AAAsB,EAAA,OAAO,EAAC,uCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CADF,EAYE,MAAC,OAAD;AACE,EAAA,KAAK,EAAEJ,KADT;AAEE,EAAA,WAAW,EAAED,WAFf;AAGE,EAAA,SAAS,EAAE;AACTM,IAAAA,GAAG,EAAE,sBADI;AAETL,IAAAA,KAAK,EAAEF,IAFE;AAGTC,IAAAA,WAHS;AAITO,IAAAA,SAAS,EAAER;AAJF,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAZF,EAuBE,MAAC,eAAD;AAAiB,EAAA,eAAe,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD,eAAeK,SAAf;AAA0B,EAAA,GAAG,EAAEC,MAAM,CAACG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CAvBF,CADF;;AA+BA,eAAeN,GAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport { NextSeo } from 'next-seo'\nimport { motion, AnimatePresence } from 'framer-motion'\n\n// Styles\nimport '../styles/main.scss'\n\nconst name = 'Ten Sharp'\nconst description = `The band behind 'You'`\nconst title = `Ten Sharp — The Band behind 'You'.`\n\n// <Component/> returns the component it self\n// pageProps returns the props you use to in that component. It can be any data\n// router.route returns the route your component lives on. So in our case it will be '/' or '/products/[id]'\n// exitBeforeEnter: AnimatePresence will only render one component at a time. The exiting component will finished its exit animation before the entering component is rendered\n\nconst App = ({ Component, pageProps, router }) => (\n  <>\n    <Head>\n      <link href=\"https://fonts.googleapis.com/css?family=Inter:400,500,600,700&display=swap\" rel=\"stylesheet\" />\n      <link rel=\"shortcut icon\" href=\"/img/favicon/favicon-32.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"128x128\" href=\"/img/favicon/favicon-128.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"152x152\" href=\"/img/favicon/favicon-152.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"167x167\" href=\"/img/favicon/favicon-167.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"180x180\" href=\"/img/favicon/favicon-180.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/img/favicon/favicon-192.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"196x196\" href=\"/img/favicon/favicon-196.png\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    </Head>\n    <NextSeo\n      title={title}\n      description={description}\n      openGraph={{\n        url: 'https://tensharp.com',\n        title: name,\n        description,\n        site_name: name,\n      }}\n    />\n\n    <AnimatePresence exitBeforeEnter>\n      <Component {...pageProps} key={router.route} />\n    </AnimatePresence>\n  </>\n)\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}