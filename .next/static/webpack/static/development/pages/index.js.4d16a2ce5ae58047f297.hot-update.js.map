{"version":3,"file":"static/webpack/static/development/pages/index.js.4d16a2ce5ae58047f297.hot-update.js","sources":["webpack:///./src/components/molecules/Article/index.js"],"sourcesContent":["import { post, favicon } from './Article.module.scss'\nimport { useEffect, useState } from 'react'\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils'\nconst Article = ({ article, excerpt }) => {\n  const {\n    title,\n    url,\n    author,\n    source,\n    sourceUrl,\n    post\n  } = article\n\n  const rawUrl =\n    sourceUrl\n      .replace('https://', '')\n      .replace('http://', '')\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(`/api/shares?url=${url}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setItems(result);\n          setIsLoaded(true);\n          console.log(result);\n\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n\n\n  return (\n    <article className={post}>\n      {isLoaded === true ? `${new Intl.NumberFormat().format(items['Facebook']['share_count'])}` : 'Loading...'}\n      <h2><a href={url}>{title}</a></h2>\n      <p className=\"excerpt\">\n        {excerpt ? `${post.slice(0, 140)}...` : post}\n      </p>\n      <cite>\n        <img className={favicon} src={`https://api.faviconkit.com/${rawUrl}/144`} alt={`${rawUrl} logo.`} />{` â€” ${author}, `}<a href={sourceUrl}>{source}</a></cite>\n    </article>\n  )\n}\n\nexport default Article\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}